#--------------------
# 全局配置
#--------------------
global:
  env: "dev"                      # 当前运行环境（这里是的第二优先级，如果启动时的命令行参数时没有指定--env参数，这里的才会生效）
  ginMode: "release"              # 运行模式（debug、test、release），如果不是二次开发该项目，则不用关注这个参数。


#--------------------
# 服务监听的地址和端口
#--------------------
service:
  host: "0.0.0.0"
  port: "7077"


#--------------------
# 日志配置
#--------------------
log:
  level: info                                 #（选项：debug、info）
  format: text                                #（选项：json、text）
  runtimeLogFile: ./gomessage-runtime.log     # 该文件记录"运行时"的日志
  accessLogFile: ./gomessage-access.log       # 该文件记录"access"的日志
  pushLogFile: ./gomessage-push.log           # 该文件记录"推送数据"的日志
  #这是一个开关，如果设定为true则会把日志也送入es中，如果为false则什么也不做（索引格式：gomessage-runtime-2022.03.05、gomessage-access-2022.03.05、gomessage-push-2022.03.05）
  log2es: true                                # （仅支持Elasticsearch 7.x以上的版本）
  es:                                         # 如果 log2es==true 时，下面的es相关的信息才会生效。
    username: "elastic"                       # 如果您的es连接不需要账号密码，请把这里设置为""
    password: "123456"                        # 如果您的es连接不需要账号密码，请把这里设置为""
    urls:
      - "http://localhost:9200"


#--------------------
# 数据库类型选择: (sqlite3、mysql)
# 作者推荐这里使用sqlite3，
# 因为该数据库只存储gomessage运行时中的元数据，存储量很小 sqlite3 刚好满足要求
# 其余的过境数据，GoMessage都会将其写入到Elasticsearch中，并不需要写入到数据库中
#--------------------
databaseType: "sqlite3"


#--------------------
# SQLite3 基本配置
#--------------------
sqlite3:
  path: "./data/gomessage.db"
  MaxIdleConns: 10
  MaxOpenConns: 100


#--------------------
# Mysql 基本配置
# 作者不推荐使用MySQL，不然会导致GoMessage变的很重，但源码中却已经实现了对MySQL的完整支持；
# 如果您非要使用mysql，请取消下文中的注释，并修改上文中的配置为（databaseType: "mysql"）即可。
#--------------------
#mysql:
#  host: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
#  port: "3306"
#  name: "xxxxxxxxxx"
#  username: "xxxxxxxxxx"
#  password: "xxxxxxxxxx"
#  options: "charset=utf8mb4&parseTime=True&loc=Local"








