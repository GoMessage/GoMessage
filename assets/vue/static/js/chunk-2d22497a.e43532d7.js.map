{"version":3,"sources":["webpack:///./src/views/cron/ViewCrontab.vue","webpack:///src/views/cron/ViewCrontab.vue","webpack:///./src/views/cron/ViewCrontab.vue?f1bd","webpack:///./src/views/cron/ViewCrontab.vue?9f0c"],"names":["render","_vm","this","_c","_self","staticStyle","attrs","staticClass","slot","_v","ref","formData2","model","value","crontab_name","callback","$$v","$set","expression","crontab_rule","on","visible","listNamespace","crontab_namespace","_l","namespaceOptions","item","key","label","crontab_activate","minRows","maxRows","crontab_content","onSubmit","ListData2","background","color","handleRowClick","formatNamespace","formatStatus","scopedSlots","_u","fn","scope","$event","delete_one_data","row","staticRenderFns","name","data","componentKey","id","methods","column","event","console","log","getCrontabOne","then","response","code","result","catch","err","postCrontab","refresh_self","alert","msg","putCrontabOne","cellValue","join","listCrontab","getCrontab","getNamespace","map","confirm","deleteCrontabOne","message","error","created","component"],"mappings":"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","file":"static/js/chunk-2d22497a.e43532d7.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-row',{staticStyle:{\"top\":\"0\",\"left\":\"0\",\"right\":\"0\",\"bottom\":\"0\",\"position\":\"absolute\",\"display\":\"flex\"}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-card',{staticStyle:{\"margin\":\"20px\",\"padding\":\"10px\",\"text-align\":\"left\"}},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"发送定时消息（Crontab类型的时间规则定义）\")])]),_c('el-form',{ref:_vm.formData2,attrs:{\"model\":_vm.formData2,\"label-width\":\"90px\"}},[_c('el-form-item',{attrs:{\"label\":\"名称：\"}},[_c('el-input',{attrs:{\"placeholder\":\"下班打卡提醒\"},model:{value:(_vm.formData2.crontab_name),callback:function ($$v) {_vm.$set(_vm.formData2, \"crontab_name\", $$v)},expression:\"formData2.crontab_name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"时间规则：\"}},[_c('el-input',{attrs:{\"placeholder\":\"*/5  *  *  *  * （分、时、日、月、周）\"},model:{value:(_vm.formData2.crontab_rule),callback:function ($$v) {_vm.$set(_vm.formData2, \"crontab_rule\", $$v)},expression:\"formData2.crontab_rule\"}})],1),_c('el-form-item',{attrs:{\"label\":\"发送通道：\"}},[_c('el-select',{staticStyle:{\"width\":\"70%\"},attrs:{\"multiple\":\"\",\"placeholder\":\"请选择\"},on:{\"visible-change\":visible => { if (visible) _vm.listNamespace() }},model:{value:(_vm.formData2.crontab_namespace),callback:function ($$v) {_vm.$set(_vm.formData2, \"crontab_namespace\", $$v)},expression:\"formData2.crontab_namespace\"}},_vm._l((_vm.namespaceOptions),function(item){return _c('el-option',{key:item.label,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"是否启用：\"}},[_c('el-switch',{model:{value:(_vm.formData2.crontab_activate),callback:function ($$v) {_vm.$set(_vm.formData2, \"crontab_activate\", $$v)},expression:\"formData2.crontab_activate\"}})],1),_c('el-form-item',{attrs:{\"label\":\"消息内容：\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"autosize\":{ minRows: 10, maxRows: 200}},model:{value:(_vm.formData2.crontab_content),callback:function ($$v) {_vm.$set(_vm.formData2, \"crontab_content\", $$v)},expression:\"formData2.crontab_content\"}})],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onSubmit}},[_vm._v(\"创建或更新\")]),_c('el-button',[_vm._v(\"取消\")])],1)],1)],1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-card',{staticStyle:{\"margin\":\"20px\"}},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.ListData2,\"border\":\"\",\"header-cell-style\":{background:'#2f2f35',color:'#fff'},\"highlight-current-row\":\"\"},on:{\"row-click\":_vm.handleRowClick}},[_c('el-table-column',{attrs:{\"prop\":\"crontab_name\",\"show-overflow-tooltip\":\"\",\"sortable\":\"\",\"label\":\"名称\"}}),_c('el-table-column',{attrs:{\"prop\":\"crontab_rule\",\"width\":\"110\",\"label\":\"时间规则\"}}),_c('el-table-column',{attrs:{\"prop\":\"crontab_namespace\",\"label\":\"发送通道\",\"show-overflow-tooltip\":\"\",\"formatter\":_vm.formatNamespace}}),_c('el-table-column',{attrs:{\"width\":\"110\",\"prop\":\"crontab_activate\",\"formatter\":_vm.formatStatus,\"sortable\":\"\",\"label\":\"是否启用\"}}),_c('el-table-column',{attrs:{\"width\":\"80\",\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.delete_one_data(scope.row)}}},[_vm._v(\"删除\")])]}}])})],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <!--  布局撑满el-main容器 -->\n  <el-row style=\"top: 0;left: 0;right: 0;bottom: 0;position: absolute; display: flex;\">\n\n    <!--    左侧col-->\n    <el-col :span=\"12\">\n\n      <el-card style=\"margin: 20px;padding: 10px;text-align: left;\">\n\n        <div slot=\"header\" class=\"clearfix\">\n          <span>发送定时消息（Crontab类型的时间规则定义）</span>\n        </div>\n\n        <el-form :ref=\"formData2\"  :model=\"formData2\" label-width=\"90px\">\n          <el-form-item label=\"名称：\">\n            <el-input v-model=\"formData2.crontab_name\" placeholder=\"下班打卡提醒\"></el-input>\n          </el-form-item>\n\n          <el-form-item label=\"时间规则：\">\n            <el-input v-model=\"formData2.crontab_rule\" placeholder=\"*/5  *  *  *  * （分、时、日、月、周）\"></el-input>\n          </el-form-item>\n\n          <!--          <el-form-item label=\"发送通道：\">-->\n          <!--            <el-checkbox-group v-model=\"form.crontab_namespace\">-->\n          <!--              <el-checkbox v-for=\"item in namespaceOptions\" :label=\"item.label\" :key=\"item.label\" name=\"type\"></el-checkbox>-->\n          <!--            </el-checkbox-group>-->\n          <!--          </el-form-item>-->\n\n          <el-form-item label=\"发送通道：\">\n            <el-select\n                v-model=\"formData2.crontab_namespace\"\n                multiple\n                placeholder=\"请选择\"\n                style=\"width: 70%;\"\n                @visible-change=\"visible => { if (visible) listNamespace() }\">\n              <el-option\n                  v-for=\"item in namespaceOptions\"\n                  :key=\"item.label\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"是否启用：\">\n            <el-switch v-model=\"formData2.crontab_activate\"></el-switch>\n          </el-form-item>\n\n\n          <el-form-item label=\"消息内容：\">\n            <el-input\n                type=\"textarea\"\n                v-model=\"formData2.crontab_content\"\n                :autosize=\"{ minRows: 10, maxRows: 200}\"\n            ></el-input>\n          </el-form-item>\n\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"onSubmit\">创建或更新</el-button>\n            <el-button>取消</el-button>\n          </el-form-item>\n\n        </el-form>\n      </el-card>\n    </el-col>\n\n    <!--    ===========================================================================================-->\n    <!--    ===========================================================================================-->\n    <!--    ===========================================================================================-->\n    <!--    ===========================================================================================-->\n    <!--    ===========================================================================================-->\n    <!--    右侧col-->\n    <el-col :span=\"12\">\n      <el-card style=\"margin: 20px;\">\n        <el-table\n            :data=\"ListData2\"\n            border\n            :header-cell-style=\"{background:'#2f2f35',color:'#fff'}\"\n            @row-click=\"handleRowClick\"\n            highlight-current-row\n            style=\"width: 100%;\">\n\n          <el-table-column\n              prop=\"crontab_name\"\n              show-overflow-tooltip\n              sortable\n              label=\"名称\">\n          </el-table-column>\n\n          <el-table-column\n              prop=\"crontab_rule\"\n              width=\"110\"\n              label=\"时间规则\">\n          </el-table-column>\n\n          <el-table-column\n              prop=\"crontab_namespace\"\n              label=\"发送通道\"\n              show-overflow-tooltip\n              :formatter=\"formatNamespace\">\n          </el-table-column>\n\n          <el-table-column\n              width=\"110\"\n              prop=\"crontab_activate\"\n              :formatter=\"formatStatus\"\n              sortable\n              label=\"是否启用\">\n          </el-table-column>\n\n          <el-table-column\n              width=\"80\"\n              label=\"操作\">\n            <template slot-scope=\"scope\">\n              <el-button @click=\"delete_one_data(scope.row)\" type=\"text\" size=\"small\">删除</el-button>\n              <!--              <el-button type=\"text\" size=\"small\">编辑</el-button>-->\n            </template>\n          </el-table-column>\n\n\n        </el-table>\n      </el-card>\n    </el-col>\n  </el-row>\n</template>\n\n\n<script>\nimport {\n  deleteCrontabOne,\n  getCrontab,\n  getCrontabOne,\n  getNamespace,\n  postCrontab,\n  putCrontabOne\n} from \"@/service/requests\";\n\nexport default {\n  name: \"ViewCrontab\",\n  data() {\n    // const validateCrontabRule = (rule, value, callback) => {\n    //   console.log(\"调用了 validateCrontabRule 函数\"); // 添加日志来确认函数调用\n    //   const crontabRegex = /^(\\*|([0-5]?[0-9](-[0-5]?[0-9])?)(\\/[0-9]+)?)(\\s+(\\*|([01]?[0-9]|2[0-3])(-[01]?[0-9]|2[0-3])?)(\\/[0-9]+)?)(\\s+(\\*|([1-9]|[12][0-9]|3[01])(-[1-9]|[12][0-9]|3[01])?)(\\/[0-9]+)?)(\\s+(\\*|([1-9]|1[0-2])(-[1-9]|1[0-2])?)(\\/[0-9]+)?)(\\s+(\\*|([0-6])(-[0-6])?)(\\/[0-9]+)?)$/;\n    //   if (!value) {\n    //     callback(new Error('请输入时间规则'));\n    //   } else if (!crontabRegex.test(value)) {\n    //     callback(new Error('时间规则格式不正确'));\n    //   } else {\n    //     callback();\n    //   }\n    // }\n\n    return {\n      // formData2rules: {\n      //   \"crontab_rule\": [\n      //     {required: true, message: '请输入用户名', trigger: 'blur'},\n      //     {validator: validateCrontabRule, trigger: ['blur', 'change']}\n      //   ],\n      // },\n      componentKey: 0,\n      ListData2: [\n        {\n          id: \"\",\n          crontab_name: '提醒小伙伴下班打卡',\n          crontab_rule: '*/5 * 2 * *',\n          crontab_namespace: [\"default\", \"ttpai\", \"alarmdog\"],\n          crontab_activate: false,\n          crontab_content: '113123123123123123123113123123123123123123113123123123123123123113123123123123123123113123123123123123123113123123123123123123',\n        },\n        // {\n        //   id: \"\",\n        //   crontab_name: '002',\n        //   crontab_rule: '*/4 * * * *',\n        //   crontab_namespace: [\"default\", \"alarmdog\"],\n        //   crontab_activate: false,\n        //   crontab_content: '113123123123123123123113123123123123123123113123123123123123113123123123123123123113123123123123123123113123123123123123123',\n        // },\n        // {\n        //   id: \"\",\n        //   crontab_name: '003',\n        //   crontab_rule: '*/5 * 2 * *',\n        //   crontab_namespace: [\"alarmdog\"],\n        //   crontab_activate: true,\n        //   crontab_content: '113123123123123123123113123123123123123123113123123123123123113123123123123123123113123123123123123123113123123123123123123',\n        // },\n        // {\n        //   id: \"\",\n        //   crontab_name: '123',\n        //   crontab_rule: '5 * * * *',\n        //   crontab_namespace: [\"default\", \"ttpai\", \"alarmdog\", \"aaaa\", \"bbb\"],\n        //   crontab_activate: true,\n        //   crontab_content: '113123123123123123123113123123123123123123113123123123123123113123123123123123123113123123123123123123113123123123123123123',\n        // }\n      ],\n      formData2: {\n        id: -1,\n        crontab_name: '',\n        crontab_rule: '',\n        crontab_namespace: [],\n        crontab_activate: false,\n        crontab_content: '',\n      },\n      namespaceOptions: [\n        {label: 'default', value: 'default'},\n        // {label: 'ttpai', value: 'ttpai'},\n        // {label: 'alarmdog', value: 'alarmdog'},\n        // {label: 'aaaa', value: 'aaaa'},\n        // {label: 'bbb', value: 'bbb'}\n      ]\n    }\n  },\n  methods: {\n    // validateCrontabRule(rule, value, callback) {\n    //   console.log(\"调用了 validateCrontabRule 函数\"); // 添加日志来确认函数调用\n    //   const crontabRegex = /^(\\*|([0-5]?[0-9](-[0-5]?[0-9])?)(\\/[0-9]+)?)(\\s+(\\*|([01]?[0-9]|2[0-3])(-[01]?[0-9]|2[0-3])?)(\\/[0-9]+)?)(\\s+(\\*|([1-9]|[12][0-9]|3[01])(-[1-9]|[12][0-9]|3[01])?)(\\/[0-9]+)?)(\\s+(\\*|([1-9]|1[0-2])(-[1-9]|1[0-2])?)(\\/[0-9]+)?)(\\s+(\\*|([0-6])(-[0-6])?)(\\/[0-9]+)?)$/;\n    //   if (!value) {\n    //     callback(new Error('请输入时间规则'));\n    //   } else if (!crontabRegex.test(value)) {\n    //     callback(new Error('时间规则格式不正确'));\n    //   } else {\n    //     callback();\n    //   }\n    // },\n\n    handleRowClick(row, column, event) {\n      // row: 当前点击行的数据对象\n      // column: 当前点击的列数据\n      // event: 原生点击事件\n      console.log('点击的行数据:', row);\n      console.log('点击的列:', column);\n      console.log('点击事件:', event);\n\n      // 在这里可以执行你需要的逻辑，例如存储/处理该行数据\n      // this.form = row;\n\n      getCrontabOne(row.id).then(response => {\n        if (response.data.code === 1) {\n          this.formData2 = response.data.result;\n        }\n      }).catch(err => {\n        console.log(err);\n      })\n\n\n    },\n    onSubmit() {\n      // console.log('表单数据:', this.form);\n      // 这里可以添加更多处理表单提交的逻辑\n\n      let data = this.formData2\n\n      //如果data等于编号-1则新增数据，否则就只是更新数据\n      if (data.id === -1) {\n        data.id = null;\n        postCrontab(data).then(response => {\n          if (response.data.code === 1) {\n            this.refresh_self();\n          }else {\n            alert(response.data.msg);\n          }\n        }).catch(err => {\n          alert(\"数据添加失败，请检查数据格式是否正确！\");\n          console.log(err);\n        })\n\n      } else {\n        putCrontabOne(data.id, data).then(response => {\n          if (response.data.code === 1) {\n            this.refresh_self();\n          }\n\n        }).catch(err => {\n          console.log(err);\n        })\n\n      }\n\n      // this.componentKey += 1;\n\n\n    },\n    formatStatus(row, column, cellValue) {\n      // 将布尔值转换为文本\n      return cellValue ? '启用' : '未启用';\n    },\n    formatNamespace(row, column, cellValue) {\n      // 将数组转换为逗号分隔的字符串\n      return cellValue.join(', ');\n    },\n    listCrontab: function () {\n      getCrontab().then(response => {\n        if (response.data.code === 1) {\n          this.ListData2 = response.data.result;\n        }\n      }).catch(err => {\n        console.log(err)\n      })\n    },\n    listNamespace: function () {\n      getNamespace().then(response => {\n        if (response.data.code === 1) {\n          this.namespaceOptions = response.data.result.map(item => {\n            return {label: item.name, value: item.name};\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      })\n    },\n    delete_one_data: function (row) {\n      if (confirm(`确定要删除名称为 '${row.crontab_name}' 的定时任务吗？`)) {\n        deleteCrontabOne(row.id).then(response => {\n          if (response.data.code === 1) {\n            this.refresh_self();\n            alert('删除成功！');\n          } else {\n            this.refresh_self();\n            alert('删除失败：' + response.data.message);\n          }\n        }).catch(err => {\n          console.error('删除失败：', err);\n          alert('删除失败，请检查网络或联系管理员。');\n        });\n      }\n    },\n    // 刷新自身\n    refresh_self: function () {\n      this.formData2 = {\n        id: -1,\n        crontab_name: '',\n        crontab_rule: '',\n        crontab_namespace: [],\n        crontab_activate: false,\n        crontab_content: '',\n      };\n      this.listCrontab();\n    }\n  },\n  created() {\n    this.listCrontab();\n  }\n\n}\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ViewCrontab.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ViewCrontab.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ViewCrontab.vue?vue&type=template&id=5cb09f0f&scoped=true&\"\nimport script from \"./ViewCrontab.vue?vue&type=script&lang=js&\"\nexport * from \"./ViewCrontab.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5cb09f0f\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}